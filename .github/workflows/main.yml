name: DevTest with Lys Agent

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  devtest-analysis:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Run Maven Test and Capture Logs
        id: run_tests
        run: |
          # Use o comando `mvn verify` para que a meta `check` do JaCoCo seja executada.
          # A pipeline irá falhar aqui se a cobertura não atingir o mínimo.
          mvn clean verify
        continue-on-error: true # Permite que a pipeline continue mesmo em caso de falha

      - name: Set error log if tests failed
        if: steps.run_tests.outcome == 'failure'
        run: |
          echo "error_log=A verificação de cobertura de testes do JaCoCo falhou. O projeto não atingiu o limite mínimo de cobertura. Verifique o log do passo 'Run Maven Test and Capture Logs' para detalhes." >> $GITHUB_ENV

      # Os passos a seguir são executados apenas se a etapa 'Run Maven Test' falhar
      - name: Authenticate with StackSpot and get JWT
        id: auth
        if: steps.run_tests.outcome == 'failure'
        env:
          CLIENT_ID: ${{ secrets.CLIENT_ID }}
          CLIENT_KEY: ${{ secrets.CLIENT_KEY }}
          REALM: ${{ secrets.REALM }}
        run: |
          JWT=$(curl -s "https://idm.stackspot.com/$REALM/oidc/oauth/token" \
            -H 'Content-Type: application/x-www-form-urlencoded' \
            -d 'grant_type=client_credentials' \
            -d "client_id=$CLIENT_ID" \
            -d "client_secret=$CLIENT_KEY" | jq -r '.access_token')
          echo "JWT=$JWT" >> $GITHUB_ENV

      - name: Enviar erro para Lys e exibir resposta
        if: steps.run_tests.conclusion == 'failure'
        env:
          JWT: ${{ steps.auth.outputs.jwt }}
          ERROR_LOG: ${{ env.error_log }}
        run: |
          RESPONSE=$(curl -s 'https://genai-inference-app.stackspot.com/v1/agent/765240/chat' \
            -H 'Content-Type: application/json' \
            -H "Authorization: Bearer $JWT" \
            -d "{ \"streaming\": false, \"user_prompt\": \"$ERROR_LOG\", \"stackspot_knowledge\": false, \"return_ks_in_response\": true }")
          # Se a resposta for JSON e o texto vier em .response, descomente a linha abaixo:
          # echo "$RESPONSE" | jq -r '.response'
          # Caso a resposta já seja texto puro, apenas imprima:
          echo "Resposta da Lys:"
          echo "$RESPONSE"